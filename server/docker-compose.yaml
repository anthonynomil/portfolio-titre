version: "3.8"
name: "portfolio-api"

services:
  server:
    image: portfolio-api
    build:
      context: .
      dockerfile: ./.docker/Dockerfile
    environment:
      # Application environment
      - APPLICATION_ENVIRONMENT=${APPLICATION_ENVIRONMENT}

      # API settings
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}

      # JWT settings
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRATION=${JWT_ACCESS_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}

      # Database settings
      - DATABASE_HOST=db
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}

      # S3 settings
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_REGION=${S3_REGION}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_ENDPOINT_URL=s3
      - S3_ENDPOINT_PORT=9000
    ports:
      - "${API_PORT}:${API_PORT}"
    networks:
      - backend-network

  s3:
    image: quay.io/minio/minio
    ports:
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command:
      server /data --console-address ":9001"
    volumes:
      - s3-data:/data
    networks:
      - backend-network
  db:
    image: postgres:16.4-alpine3.20
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend-network

volumes:
  s3-data:
    driver: local
  db-data:
    driver: local

networks:
  backend-network: